plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    namespace 'com.antique.story'
    compileSdk Version.compileSdk

    defaultConfig {
        minSdk Version.minSdk
        targetSdk Version.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "KAKAO_REST_API_KEY", properties["KAKAO_REST_API_KEY"]

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation project(":common")

    implementation(AndroidX.CORE)
    implementation(AndroidX.APP_COMPAT)
    implementation(Google.MATERIAL)
    implementation(AndroidX.CONSTRAINT_LAYOUT)
    testImplementation(AndroidTest.JUNIT4)
    androidTestImplementation(AndroidTest.EXT_JUNIT)
    androidTestImplementation(AndroidTest.ESPRESSO_CORE)

    implementation platform(Firebase.FIREBASE_BOM)
    implementation(Firebase.FIREBASE_ANALYTICS)
    implementation(Firebase.FIREBASE_AUTH)
    implementation(Firebase.FIREBASE_REALTIME_DATABASE)
    implementation(Firebase.FIREBASE_STORAGE)

    implementation(AndroidX.VIEW_MODEL)
    implementation(AndroidX.LIVE_DATA)

    implementation(AndroidX.NAVIGATION_RUNTIME)
    implementation(AndroidX.NAVIGATION_FRAGMENT)
    implementation(AndroidX.NAVIGATION_UI)

    implementation(Kotlin.COROUTINES)

    implementation(Google.DAGGER)
    kapt(Google.DAGGER_COMPILER)

    implementation(AndroidX.RECYCLER_VIEW)

    implementation(ThirdParty.GLIDE)
    kapt(ThirdParty.GLIDE_COMPILER)

    implementation(ThirdParty.RETROFIT)
    implementation(ThirdParty.RETROFIT_CONVERTER)
    implementation(Google.GSON)


}